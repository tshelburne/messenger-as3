/*
* This file is part of the SystemMessagemanager package.
*
* @author (c) Tim Shelburne <tim@dontlookstudios.com>
*
* For the full copyright and license information, please view the LICENSE
* file that was distributed with this source code.
*/
package dls.systemmessagemanager {
	
	import dls.debugger.Debug;
	import dls.systemmessagemanager.ISystemMessageManager;
	import dls.systemmessagemanager.displaymanager.IDisplayManager;
	import dls.systemmessagemanager.displaymanager.views.IMessageView;
	import dls.systemmessagemanager.factory.IMessageFactory;
	import dls.systemmessagemanager.messages.IMessage;
	import dls.systemmessagemanager.queue.IMessageQueue;
	
	import org.osflash.signals.Signal;
	
	/*
	* a class to handle queueing and circulating system messages for display
	*/
	public class SystemMessageManager implements ISystemMessageManager {
		
		/*=========================================================*
		* PROPERTIES
		*=========================================================*/
		
		private var _debugOptions:Object = { "source" : "SystemMessageManager" };
		
		private var _messageQueue:IMessageQueue;
		
		private var _messageFactory:IMessageFactory;
		
		private var _displayManager:IDisplayManager;
		
		private var _displayView:Signal = new Signal;
		public function get displayView():Signal { return _displayView; }
		
		private var _clearView:Signal = new Signal();
		public function get clearView():Signal { return _clearView; }
		
		/*=========================================================*
		* FUNCTIONS
		*=========================================================*/
		
		public function SystemMessageManager(messageQueue:IMessageQueue, messageFactory:IMessageFactory, displayManager:IDisplayManager) {
			_messageQueue = messageQueue;
			_messageFactory = messageFactory;
			_displayManager = displayManager;
			
			_messageQueue.display.add(displayMessage);
			_messageQueue.dismissed.add(messageDismissed);
			_messageQueue.finished.add(queueFinished);
		}
		
		/**
		 * adds a message to the end of the queue
		 */
		public function queueMessage(type:String, message:String, options:Object):void {
			Debug.out("Adding '" + type + "' message to the queue...", Debug.DETAILS, _debugOptions);
			_messageQueue.add(_messageFactory.build(type, message, options));
		}
		
		/**
		 * adds a message to the queue in the position specified
		 */
		public function queueMessageAt(type:String, message:String, options:Object, index:uint):void {
			_messageQueue.addAt(_messageFactory.build(type, message, options), index);
		}
		
		/**
		 * removes a message from the queue
		 */
		public function removeMessage(message:IMessage):void {
			_messageQueue.remove(message);
		}
		
		/**
		 * dispatches the view generated by the message to be displayed
		 */
		private function displayMessage(message:IMessage):void {
			_displayView.dispatch(_displayManager.createView(message));
			message.init();
		}
		
		/**
		 * responds to a message being dismissed
		 */
		private function messageDismissed(message:IMessage):void {
			
		}
		
		/**
		 * responds to the message queue being emptied
		 */
		private function queueFinished():void {
			_clearView.dispatch();
		}
	}
}